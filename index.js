const TelegramApi = require('node-telegram-bot-api');

const token = '8310681939:AAGs3atKmCwNxjuez57atd0wpUzSerSmRx4';
const bot = new TelegramApi(token, { polling: true });

const chats = {};

bot.setMyCommands([
    { command: '/start', description: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ' },
    { command: '/info', description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ' },
    { command: '/help', description: '–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è' },
    { command: '/roll', description: '–†–æ–ª–∏—Ç' },
]);

const messages = {
    ru: {
        start: `–ü—Ä–∏–≤–µ—Ç, {first_name}! üëã\n\n–≠—Ç–æ –±–æ—Ç –¥–ª—è –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–æ–≤ –≤ —Å—Ç–∏–ª–µ D&D (Dungeons & Dragons).\n\n‚ú® –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º–æ–π –ø—Ä–æ–µ–∫—Ç ‚Äî –ø–æ–¥–¥–µ—Ä–∂–∏ –º–µ–Ω—è –Ω–∞ GitHub:\nhttps://github.com/kirillbay325  \n–ü–æ—Å—Ç–∞–≤—å –∑–≤—ë–∑–¥–æ—á–∫—É ‚≠ê ‚Äî —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –±–æ—Ç–∞ –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã!`,
        info: `
ü§ñ –≠—Ç–æ –±–æ—Ç –¥–ª—è –±—Ä–æ—Å–∫–æ–≤ –∫—É–±–∏–∫–æ–≤ –≤ —Å—Ç–∏–ª–µ D&D (Dungeons & Dragons).

üîπ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É: /roll 5d6
üîπ –ì–¥–µ 5 ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—É–±–∏–∫–æ–≤, 6 ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä–∞–Ω–µ–π
üîπ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ 99 –∫—É–±–∏–∫–æ–≤ –∏ –¥–æ 999 –≥—Ä–∞–Ω–µ–π

üí° –ü—Ä–∏–º–µ—Ä: /roll 2d20 ‚Üí –±—Ä–æ—Å–∏—à—å 2 –¥–≤–∞–¥—Ü–∞—Ç–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞!
            `.trim(),
        help: `
üìò –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:

1. –ù–∞–ø–∏—à–∏: /roll Ndk
   - N ‚Äî —á–∏—Å–ª–æ –∫—É–±–∏–∫–æ–≤ (1‚Äì99)
   - d ‚Äî –±—É–∫–≤–∞ "d"
   - k ‚Äî —á–∏—Å–ª–æ –≥—Ä–∞–Ω–µ–π (1‚Äì999)

2. –ü—Ä–∏–º–µ—Ä—ã:
   ‚Ä¢ /roll 1d6   ‚Üí –±—Ä–æ—Å–∏—Ç—å 1 —à–µ—Å—Ç–∏–≥—Ä–∞–Ω–Ω—ã–π –∫—É–±–∏–∫
   ‚Ä¢ /roll 3d10  ‚Üí –±—Ä–æ—Å–∏—Ç—å 3 –¥–µ—Å—è—Ç–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–∞
   ‚Ä¢ /roll 5d20  ‚Üí –±—Ä–æ—Å–∏—Ç—å 5 –¥–≤–∞–¥—Ü–∞—Ç–∏–≥—Ä–∞–Ω–Ω—ã—Ö –∫—É–±–∏–∫–æ–≤

3. –û—Ç–≤–µ—Ç –±—É–¥–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
   üé≤ –ë—Ä–æ—Å–æ–∫: 5d20
   üî¢ –í—Å–µ–≥–æ: 78
   1-–π –±—Ä–æ—Å–æ–∫: 15
   2-–π –±—Ä–æ—Å–æ–∫: 3
   3-–π –±—Ä–æ—Å–æ–∫: 22
   4-–π –±—Ä–æ—Å–æ–∫: 17
   5-–π –±—Ä–æ—Å–æ–∫: 21

‚ö†Ô∏è –ï—Å–ª–∏ –Ω–∞–ø–∏—à–µ—à—å —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ‚Äî –±–æ—Ç —Å–∫–∞–∂–µ—Ç, –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.
            `.trim(),
        rollInvalidFormat: '‚ùå –§–æ—Ä–º–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å: Ndk\n–ü—Ä–∏–º–µ—Ä: /roll 5d6',
        rollMissingArgs: 'üìå –ù–∞–ø–∏—à–∏ /roll Ndk, –Ω–∞–ø—Ä–∏–º–µ—Ä: /roll 5d6 :dice',
        rollLimitDice: 'üî¢ –ó–Ω–∞—á–µ–Ω–∏–µ N (—á–∏—Å–ª–æ –∫—É–±–∏–∫–æ–≤) –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 99',
        rollLimitSides: 'üé≤ –ó–Ω–∞—á–µ–Ω–∏–µ K (—á–∏—Å–ª–æ –≥—Ä–∞–Ω–µ–π) –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 999',
        rollResult: (dice, sides, total, rolls) => {
            let res = `üé≤ –ë—Ä–æ—Å–æ–∫: ${dice}d${sides}\n`;
            res += `üî¢ –í—Å–µ–≥–æ: ${total}\n\n`;
            rolls.forEach((roll, index) => {
                res += `${index + 1}-–π –±—Ä–æ—Å–æ–∫: ${roll}\n`;
            });
            return res;
        }
    },

    en: {
        start: `Hello, {first_name}! üëã\n\nThis is a dice roller bot for D&D (Dungeons & Dragons).\n\n‚ú® If you like my project, please support me on GitHub:\nhttps://github.com/kirillbay325  \nLeave a star ‚≠ê ‚Äî it helps me keep developing bots and other projects!`,
        info: `
ü§ñ This is a dice roller bot for D&D (Dungeons & Dragons).

üîπ Use: /roll 5d6
üîπ Where 5 = number of dice, 6 = number of sides
üîπ Supports up to 99 dice and 999 sides

üí° Example: /roll 2d20 ‚Üí roll two 20-sided dice!
            `.trim(),
        help: `
üìò How to use:

1. Type: /roll Ndk
   - N = number of dice (1‚Äì99)
   - d = letter "d"
   - k = number of sides (1‚Äì999)

2. Examples:
   ‚Ä¢ /roll 1d6   ‚Üí roll one six-sided die
   ‚Ä¢ /roll 3d10  ‚Üí roll three ten-sided dice
   ‚Ä¢ /roll 5d20  ‚Üí roll five twenty-sided dice

3. Response format:
   üé≤ Roll: 5d20
   üî¢ Total: 78
   1st roll: 15
   2nd roll: 3
   3rd roll: 22
   4th roll: 17
   5th roll: 21

‚ö†Ô∏è If you type something wrong ‚Äî the bot will tell you how to fix it.
            `.trim(),
        rollInvalidFormat: '‚ùå Format must be: Ndk\nExample: /roll 5d6',
        rollMissingArgs: 'üìå Type /roll Ndk, e.g. /roll 5d6',
        rollLimitDice: 'üî¢ N (number of dice) must be between 1 and 99',
        rollLimitSides: 'üé≤ K (number of sides) must be between 1 and 999',
        rollResult: (dice, sides, total, rolls) => {
            let res = `üé≤ Roll: ${dice}d${sides}\n`;
            res += `üî¢ Total: ${total}\n\n`;
            rolls.forEach((roll, i) => {
                const suffix = ['st', 'nd', 'rd'][i] || 'th';
                res += `${i + 1}${suffix} roll: ${roll}\n`;
            });
            return res;
        }
    },

    fr: {
        start: `Bonjour, {first_name}! üëã\n\nCeci est un bot de lancer de d√©s pour le D&D (Dungeons & Dragons).\n\n‚ú® Si tu aimes mon projet, soutiens-moi sur GitHub :\nhttps://github.com/kirillbay325  \nMets une √©toile ‚≠ê ‚Äî √ßa m'aide √† continuer √† d√©velopper ce bot et d'autres projets !`,
        info: `
ü§ñ Ce bot permet de lancer des d√©s au style D&D (Dungeons & Dragons).

üîπ Utilise : /roll 5d6
üîπ O√π 5 = nombre de d√©s, 6 = nombre de faces
üîπ Supporte jusqu‚Äô√† 99 d√©s et 999 faces

üí° Exemple : /roll 2d20 ‚Üí lance deux d√©s √† 20 faces !
            `.trim(),
        help: `
üìò Comment utiliser :

1. Tape : /roll Ndk
   - N = nombre de d√©s (1‚Äì99)
   - d = lettre "d"
   - k = nombre de faces (1‚Äì999)

2. Exemples :
   ‚Ä¢ /roll 1d6   ‚Üí lance un d√© √† 6 faces
   ‚Ä¢ /roll 3d10  ‚Üí lance trois d√©s √† 10 faces
   ‚Ä¢ /roll 5d20  ‚Üí lance cinq d√©s √† 20 faces

3. Format de r√©ponse :
   üé≤ Lancer : 5d20
   üî¢ Total : 78
   1er lancer : 15
   2e lancer : 3
   3e lancer : 22
   4e lancer : 17
   5e lancer : 21

‚ö†Ô∏è Si tu tapes mal, le bot t‚Äôindiquera la bonne forme.
            `.trim(),
        rollInvalidFormat: '‚ùå Format doit √™tre : Ndk\nExemple : /roll 5d6',
        rollMissingArgs: 'üìå Tape /roll Ndk, par ex. /roll 5d6',
        rollLimitDice: 'üî¢ N (nombre de d√©s) doit √™tre entre 1 et 99',
        rollLimitSides: 'üé≤ K (nombre de faces) doit √™tre entre 1 et 999',
        rollResult: (dice, sides, total, rolls) => {
            let res = `üé≤ Lancer : ${dice}d${sides}\n`;
            res += `üî¢ Total : ${total}\n\n`;
            rolls.forEach((roll, i) => {
                res += `${i + 1}·µâ lancer : ${roll}\n`;
            });
            return res;
        }
    },

    de: {
        start: `Hallo, {first_name}! üëã\n\nDies ist ein W√ºrfel-Generator f√ºr D&D (Dungeons & Dragons).\n\n‚ú® Wenn dir mein Projekt gef√§llt, unterst√ºtze mich auf GitHub:\nhttps://github.com/kirillbay325  \nGib mir einen Stern ‚≠ê ‚Äî das hilft mir, diesen Bot und andere Projekte weiterzuentwickeln!`,
        info: `
ü§ñ Dies ist ein W√ºrfel-Generator im Stil von D&D (Dungeons & Dragons).

üîπ Verwende: /roll 5d6
üîπ Dabei ist 5 = Anzahl der W√ºrfel, 6 = Anzahl der Seiten
üîπ Unterst√ºtzt bis zu 99 W√ºrfel und 999 Seiten

üí° Beispiel: /roll 2d20 ‚Üí wirfst zwei 20-seitige W√ºrfel!
            `.trim(),
        help: `
üìò Wie man es benutzt:

1. Gib ein: /roll Ndk
   - N = Anzahl der W√ºrfel (1‚Äì99)
   - d = Buchstabe "d"
   - k = Anzahl der Seiten (1‚Äì999)

2. Beispiele:
   ‚Ä¢ /roll 1d6   ‚Üí wirft einen sechsseitigen W√ºrfel
   ‚Ä¢ /roll 3d10  ‚Üí wirft drei zehnseitige W√ºrfel
   ‚Ä¢ /roll 5d20  ‚Üí wirft f√ºnf zwanzigseitige W√ºrfel

3. Antwortformat:
   üé≤ Wurf: 5d20
   üî¢ Gesamt: 78
   1. Wurf: 15
   2. Wurf: 3
   3. Wurf: 22
   4. Wurf: 17
   5. Wurf: 21

‚ö†Ô∏è Wenn du etwas falsch eingibst, sagt dir der Bot, wie es richtig geht.
            `.trim(),
        rollInvalidFormat: '‚ùå Format muss sein: Ndk\nBeispiel: /roll 5d6',
        rollMissingArgs: 'üìå Gib /roll Ndk ein, z.B. /roll 5d6',
        rollLimitDice: 'üî¢ N (Anzahl der W√ºrfel) muss zwischen 1 und 99 liegen',
        rollLimitSides: 'üé≤ K (Anzahl der Seiten) muss zwischen 1 und 999 liegen',
        rollResult: (dice, sides, total, rolls) => {
            let res = `üé≤ Wurf: ${dice}d${sides}\n`;
            res += `üî¢ Gesamt: ${total}\n\n`;
            rolls.forEach((roll, i) => {
                res += `${i + 1}. Wurf: ${roll}\n`;
            });
            return res;
        }
    }
};

const start = () => {
    bot.on('message', async msg => {

        if (!msg.text || msg.text.trim() === '') return;

        const text = msg.text.trim();
        const chatId = msg.chat.id;

        const langCode = msg.from.language_code;
        const lang = ['ru', 'en', 'fr', 'de'].includes(langCode) ? langCode : 'en';

        if (text === '/start') {
            const firstName = msg.from.first_name || '–î—Ä—É–≥';
            const personalizedMessage = messages[lang].start.replace('{first_name}', firstName);
            return bot.sendMessage(chatId, personalizedMessage);
        }

        if (text === '/info') {
            return bot.sendMessage(chatId, messages[lang].info);
        }

        if (text === '/help') {
            return bot.sendMessage(chatId, messages[lang].help);
        }

                if (text.startsWith('/roll')) {
            let args = '';

            // ‚úÖ –£–±–∏—Ä–∞–µ–º @–∏–º—è–±–æ—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å ‚Äî –Ω–∞–ø—Ä–∏–º–µ—Ä: /roll5d6@RandomniqDiceForDandDBot
            const cleanText = text.split('@')[0];

            // ‚úÖ –°–õ–£–ß–ê–ô 1: /roll 5d6 ‚Äî —Å –ø—Ä–æ–±–µ–ª–æ–º
            if (cleanText.includes(' ')) {
                args = cleanText.split(' ').slice(1).join(' ').trim();
            }
            // ‚úÖ –°–õ–£–ß–ê–ô 2: /roll5d6 ‚Äî –±–µ–∑ –ø—Ä–æ–±–µ–ª–∞ (–¥–∞–∂–µ —Å @–±–æ—Ç–æ–º)
            else {
                const match = cleanText.match(/^\/roll(\d+d\d+)$/);
                if (match) {
                    args = match[1]; // ‚Üê –≤–æ—Ç —Ç–≤–æ–π "5d6", "10d20" –∏ —Ç.–¥.
                }
            }

            // –ï—Å–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–µ—Ç ‚Äî –æ—à–∏–±–∫–∞
            if (!args) {
                return bot.sendMessage(chatId, messages[lang].rollMissingArgs);
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç Ndk
            const diceMatch = args.match(/^(\d+)d(\d+)$/);
            if (!diceMatch) {
                return bot.sendMessage(chatId, messages[lang].rollInvalidFormat);
            }

            const numberOfDice = parseInt(diceMatch[1]);
            const sides = parseInt(diceMatch[2]);

            if (numberOfDice < 1 || numberOfDice > 99) {
                return bot.sendMessage(chatId, messages[lang].rollLimitDice);
            }
            if (sides < 1 || sides > 999) {
                return bot.sendMessage(chatId, messages[lang].rollLimitSides);
            }

            const rolls = [];
            for (let i = 0; i < numberOfDice; i++) {
                rolls.push(Math.floor(Math.random() * sides) + 1);
            }

            const sum = rolls.reduce((acc, num) => acc + num, 0);

            return bot.sendMessage(chatId, messages[lang].rollResult(numberOfDice, sides, sum, rolls));
        }

        return bot.sendMessage(chatId, `–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω—è–ª, –ø—Ä–æ—á—Ç–∏ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ /info –∏ —Å–¥–µ–ª–∞–π –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å`);
    });
};

start();

console.log('[LOG] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –û–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...');